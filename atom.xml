<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kenny&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.clk11.com/"/>
  <updated>2019-07-04T08:05:59.458Z</updated>
  <id>http://www.clk11.com/</id>
  
  <author>
    <name>Kenny C</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>（转）伦纳德已经无限接近为洛杉矶打球</title>
    <link href="http://www.clk11.com/NBA-news2019070401.html"/>
    <id>http://www.clk11.com/NBA-news2019070401.html</id>
    <published>2019-07-04T08:30:49.000Z</published>
    <updated>2019-07-04T08:05:59.458Z</updated>
    
    <content type="html"><![CDATA[<p>据最新消息，科怀·伦纳德已经无限接近回洛杉矶打球，伦纳德最初的计划就是在被马刺交易所去的球队打一年后回到家乡洛杉矶，但带领猛龙夺冠让伦纳德对做出决定有所犹豫。但随着自由市场即将开启，伦纳德已经准备做出决定。对此前队友凯尔·洛瑞表示了支持：“他已经带领我们拿到了总冠军，他有权利做出任何决定，去任何他想去的地方，我的意思是，我们当然希望他能留下，但他有权利自己决定一切，做出对自己最好的决定。”<br>消息人士透露，如果伦纳德决定回到洛杉矶打球，将有90%的几率选择加盟快船队</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;据最新消息，科怀·伦纳德已经无限接近回洛杉矶打球，伦纳德最初的计划就是在被马刺交易所去的球队打一年后回到家乡洛杉矶，但带领猛龙夺冠让伦纳德对做出决定有所犹豫。但随着自由市场即将开启，伦纳德已经准备做出决定。对此前队友凯尔·洛瑞表示了支持：“他已经带领我们拿到了总冠军，他有权
      
    
    </summary>
    
      <category term="NBA" scheme="http://www.clk11.com/categories/NBA/"/>
    
    
      <category term="Lakers" scheme="http://www.clk11.com/tags/Lakers/"/>
    
  </entry>
  
  <entry>
    <title>Python编程：从入门到实践 19.3.2 missing 1 required positional argument_ &#39;on_delete&#39;问题</title>
    <link href="http://www.clk11.com/Python-programming-from-entry-to-practic-19-3-2.html"/>
    <id>http://www.clk11.com/Python-programming-from-entry-to-practic-19-3-2.html</id>
    <published>2019-07-01T06:58:49.000Z</published>
    <updated>2019-07-01T06:59:57.709Z</updated>
    
    <content type="html"><![CDATA[<p>CSDN:<a href="https://blog.csdn.net/kenidi8215" target="_blank" rel="noopener">我的CSDN博客</a><br>github:<a href="https://github.com/kenidi8215" target="_blank" rel="noopener">我的github传送</a></p><p>在19.3.2 将数据关联到用户这个小节中，需要修改models.py文件，用于将数据关联到用户。<br>但在执行python manage.py makemigrations learning_logs时，会出现错误见下图：<br><img src="https://img-blog.csdnimg.cn/20190701113922318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2tlbmlkaTgyMTU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>需要将：<br>owner = models.ForeignKey(User)<br>修改为：<br>owner = models.ForeignKey(User,on_delete=models.CASCADE)<br><img src="https://img-blog.csdnimg.cn/20190701114043477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2tlbmlkaTgyMTU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后再执行，成功：<br><img src="https://img-blog.csdnimg.cn/20190701114121992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2tlbmlkaTgyMTU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>原因：<br>在django2.0后，定义外键和一对一关系的时候需要加on_delete选项，此参数为了避免两个表里的数据不一致问题，不然会报错：<br>TypeError: <strong>init</strong>() missing 1 required positional argument: ‘on_delete’<br>举例说明：<br>user=models.OneToOneField(User)<br>owner=models.ForeignKey(UserProfile)<br>需要改成：<br>user=models.OneToOneField(User,on_delete=models.CASCADE) –在老版本这个参数（models.CASCADE）是默认值<br>owner=models.ForeignKey(UserProfile,on_delete=models.CASCADE) –在老版本这个参数（models.CASCADE）是默认值<br>参数说明：<br>on_delete有CASCADE、PROTECT、SET_NULL、SET_DEFAULT、SET()五个可选择的值<br>CASCADE：此值设置，是级联删除。<br>PROTECT：此值设置，是会报完整性错误。<br>SET_NULL：此值设置，会把外键设置为null，前提是允许为null。<br>SET_DEFAULT：此值设置，会把设置为外键的默认值。<br>SET()：此值设置，会调用外面的值，可以是一个函数。<br>一般情况下使用CASCADE就可以了。</p><p>参考：<a href="https://www.cnblogs.com/phyger/p/8035253.html" target="_blank" rel="noopener">https://www.cnblogs.com/phyger/p/8035253.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CSDN:&lt;a href=&quot;https://blog.csdn.net/kenidi8215&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我的CSDN博客&lt;/a&gt;&lt;br&gt;github:&lt;a href=&quot;https://github.com/kenidi8
      
    
    </summary>
    
      <category term="Language" scheme="http://www.clk11.com/categories/Language/"/>
    
    
      <category term="python" scheme="http://www.clk11.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>（转）詹皇换号1石2鸟！笼络浓眉还赚一笔 名记：他锁定球衣销量第1</title>
    <link href="http://www.clk11.com/NBA-news2019062801.html"/>
    <id>http://www.clk11.com/NBA-news2019062801.html</id>
    <published>2019-06-28T12:50:49.000Z</published>
    <updated>2019-06-28T12:53:16.607Z</updated>
    
    <content type="html"><![CDATA[<p>北京时间6月28日，根据雅虎名记Haynas报道，詹姆斯将把自己的23号球衣让给新队友安东尼戴维斯。根据消息人士透露，戴维斯对于詹姆斯的这一举动深表感谢。目前虽然没有明确消息表示詹姆斯下赛季穿的号码，但詹姆斯的举动，显然已经非常大度。不过，著名篮球媒体人黎双富也透露了一个事实：詹姆斯下赛季会提前锁定球衣畅销榜第一！</p><p>按道理说，目前詹姆斯和戴维斯谁是湖人的第一球星，根本没有任何争议！詹姆斯作为联盟第一人，又是老大哥，在戴维斯到来之后，不给浓眉让球衣是情理之中的事情。但最终，詹姆斯主动放低姿态，给戴维斯让出了自己的23号战袍，这不得不赞叹老詹的手腕了。一场还没打，就用这种身外之物笼络浓眉，试想浓眉新赛季还不拼命吗？一旦湖人最终总冠军，FMVP还不是又到老詹手里？</p><p>所以，詹姆斯的这一举动可谓大度又有手腕！不过，报道NBA多年的媒体人黎双富还透露了詹皇的另外一层想法，那就是换新号可以让詹皇提前锁定下赛季最畅销球衣！仔细一想还真的非常有道理！有球迷已经表示，要攒钱买新球衣了！</p><p>因为NBA成名的巨星，经过多年的巅峰之后，培养的粉丝群体很可能已经有他的球衣了，即便赛季新款球衣出炉，也不会再花钱去买。但如果这位球员换号码，那就不一样了，追星就得追时尚，如果老詹穿湖人6号，你手中没有一件湖人6号球衣，还算老詹真球迷吗？</p><p>而这一论断也是有数据佐证的。在去年夏天詹姆斯加盟湖人之后，詹皇的球衣就卖疯了！在18-19赛季的球衣销量榜上，詹皇反超库里排名第一，要知道库里此前已经连续多年排在第一了。此次詹姆斯更换号码，他的球衣显然又要热卖一次，别忘了这是洛杉矶，能来斯台普斯看球的，都不缺钱！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;北京时间6月28日，根据雅虎名记Haynas报道，詹姆斯将把自己的23号球衣让给新队友安东尼戴维斯。根据消息人士透露，戴维斯对于詹姆斯的这一举动深表感谢。目前虽然没有明确消息表示詹姆斯下赛季穿的号码，但詹姆斯的举动，显然已经非常大度。不过，著名篮球媒体人黎双富也透露了一个事
      
    
    </summary>
    
      <category term="NBA" scheme="http://www.clk11.com/categories/NBA/"/>
    
    
      <category term="Lakers" scheme="http://www.clk11.com/tags/Lakers/"/>
    
  </entry>
  
  <entry>
    <title>用天然纯露代替爽肤水才能真正的补水</title>
    <link href="http://www.clk11.com/tutu-chunlutidaishuangfushui.html"/>
    <id>http://www.clk11.com/tutu-chunlutidaishuangfushui.html</id>
    <published>2019-06-28T07:05:49.000Z</published>
    <updated>2019-06-28T07:07:02.526Z</updated>
    
    <content type="html"><![CDATA[<p>用天然纯露代替爽肤水，才能真正的补水</p><a id="more"></a><p>爽肤水中一般会添加各种保湿剂、增稠剂、肤感调节剂、酒精、香精、防腐剂等。<br>我们暂且不说其它的，只看酒精这一个成分，酒精又称为乙醇，只适用于特定皮肤，一般肌肤长期使用，易干燥、粗糙，并有提前角化的风险。</p><p>对于闻起来有明显酒精气味的护肤品，酒精添加量肯定不少。<br>但闻起来不明显的，并不代表酒精含量低，因为可以添加其它香精去掩盖。</p><p><em>图图的芳疗群</em></p><p><img src="https://i.loli.net/2019/06/28/5d159787eeff033486.png" alt="图图的芳疗群"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用天然纯露代替爽肤水，才能真正的补水&lt;/p&gt;
    
    </summary>
    
      <category term="Friends" scheme="http://www.clk11.com/categories/Friends/"/>
    
    
      <category term="图图的芳疗" scheme="http://www.clk11.com/tags/%E5%9B%BE%E5%9B%BE%E7%9A%84%E8%8A%B3%E7%96%97/"/>
    
  </entry>
  
  <entry>
    <title>祛痘精油</title>
    <link href="http://www.clk11.com/tutu-qudoujingyou.html"/>
    <id>http://www.clk11.com/tutu-qudoujingyou.html</id>
    <published>2019-06-28T04:32:49.000Z</published>
    <updated>2019-06-28T04:29:17.046Z</updated>
    
    <content type="html"><![CDATA[<p>祛痘精油<br>含有茶树、迷迭香、薰衣草、洋甘菊等多种植物精油，对任何痘痘都有效，每次只需要一点点涂抹在痘痘上即可。满满的植物精油的气味，真正的无添加哦。</p><p><img src="https://i.loli.net/2019/06/28/5d159787eeff033486.png" alt="图图的芳疗群"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;祛痘精油&lt;br&gt;含有茶树、迷迭香、薰衣草、洋甘菊等多种植物精油，对任何痘痘都有效，每次只需要一点点涂抹在痘痘上即可。满满的植物精油的气味，真正的无添加哦。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/06/28/5d159787eeff
      
    
    </summary>
    
      <category term="Friends" scheme="http://www.clk11.com/categories/Friends/"/>
    
    
      <category term="图图的芳疗" scheme="http://www.clk11.com/tags/%E5%9B%BE%E5%9B%BE%E7%9A%84%E8%8A%B3%E7%96%97/"/>
    
  </entry>
  
  <entry>
    <title>测试test</title>
    <link href="http://www.clk11.com/test.html"/>
    <id>http://www.clk11.com/test.html</id>
    <published>2019-06-27T06:32:49.000Z</published>
    <updated>2019-06-27T15:00:25.363Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这是一个test文件，用来忽悠各位看官。"><a href="#这是一个test文件，用来忽悠各位看官。" class="headerlink" title="这是一个test文件，用来忽悠各位看官。"></a>这是一个test文件，用来忽悠各位看官。</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;这是一个test文件，用来忽悠各位看官。&quot;&gt;&lt;a href=&quot;#这是一个test文件，用来忽悠各位看官。&quot; class=&quot;headerlink&quot; title=&quot;这是一个test文件，用来忽悠各位看官。&quot;&gt;&lt;/a&gt;这是一个test文件，用来忽悠各位看官。&lt;/h2&gt;
      
    
    </summary>
    
      <category term="Test" scheme="http://www.clk11.com/categories/Test/"/>
    
    
      <category term="test" scheme="http://www.clk11.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.clk11.com/hello-world.html"/>
    <id>http://www.clk11.com/hello-world.html</id>
    <published>2019-06-26T15:23:23.000Z</published>
    <updated>2019-06-27T15:00:14.247Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="Test" scheme="http://www.clk11.com/categories/Test/"/>
    
    
      <category term="test" scheme="http://www.clk11.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Python问题解决：ImportError_ No module named &#39;pygal.i18n&#39;</title>
    <link href="http://www.clk11.com/Python-programming-from-entry-to-practic-pygal.i18n.html"/>
    <id>http://www.clk11.com/Python-programming-from-entry-to-practic-pygal.i18n.html</id>
    <published>2019-04-01T14:22:49.000Z</published>
    <updated>2019-06-28T04:17:36.737Z</updated>
    
    <content type="html"><![CDATA[<p>blog:<a href="https://clk11.com" target="_blank" rel="noopener">github+hexo的blog链接</a><br>github:<a href="https://github.com/kenidi8215" target="_blank" rel="noopener">我的github传送</a><br>CSDN:<a href="https://blog.csdn.net/kenidi8215" target="_blank" rel="noopener">我的CSDN博客</a></p><p>在《Python编程：从入门到实践》书中的一个项目用到pygal.i18n获取国别码，然而，现在pygal已经没有i18n模块，要改用pygal_maps_world.i18n，解决方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在终端中运行下面语句（注意pip3/pip）</span><br><span class="line">pip install pygal_maps_world</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在代码文件中添加下面语句：</span><br><span class="line">from pygal_maps_world.i18n import COUNTRIES</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190401152446219.jpg" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20190401152508241.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2tlbmlkaTgyMTU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;blog:&lt;a href=&quot;https://clk11.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github+hexo的blog链接&lt;/a&gt;&lt;br&gt;github:&lt;a href=&quot;https://github.com/kenidi8215&quot; 
      
    
    </summary>
    
      <category term="Language" scheme="http://www.clk11.com/categories/Language/"/>
    
    
      <category term="python" scheme="http://www.clk11.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>关于pi，百万位圆周率，pi_million_digits.txt，分享给大家</title>
    <link href="http://www.clk11.com/Python-programming-from-entry-to-practic-pi_million_digits.html"/>
    <id>http://www.clk11.com/Python-programming-from-entry-to-practic-pi_million_digits.html</id>
    <published>2019-03-14T06:32:49.000Z</published>
    <updated>2019-06-28T02:29:53.139Z</updated>
    
    <content type="html"><![CDATA[<p>blog:<a href="https://clk11.com" target="_blank" rel="noopener">github+hexo的blog链接</a><br>github:<a href="https://github.com/kenidi8215" target="_blank" rel="noopener">我的github传送</a><br>CSDN:<a href="https://blog.csdn.net/kenidi8215" target="_blank" rel="noopener">我的CSDN博客</a></p><p>学习python中需要一个百万圆周率的txt文件，但是按书上的链接又打不开，百度找了很久才找到，分享一下。<br>以下是前500位。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">3.</span><br><span class="line">14159265358979323846264338327950288419716939937510</span><br><span class="line">58209749445923078164062862089986280348253421170679</span><br><span class="line">82148086513282306647093844609550582231725359408128</span><br><span class="line">48111745028410270193852110555964462294895493038196</span><br><span class="line">44288109756659334461284756482337867831652712019091</span><br><span class="line">45648566923460348610454326648213393607260249141273</span><br><span class="line">72458700660631558817488152092096282925409171536436</span><br><span class="line">78925903600113305305488204665213841469519415116094</span><br></pre></td></tr></table></figure><p>百万位下载地址如下：</p><p><a href="https://download.csdn.net/download/kenidi8215/11018505" target="_blank" rel="noopener">csdn下载：pi_million_digits.txt</a><br><a href="https://www.xuebuyuan.com/2129305.html" target="_blank" rel="noopener">外链下载免费下载</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;blog:&lt;a href=&quot;https://clk11.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github+hexo的blog链接&lt;/a&gt;&lt;br&gt;github:&lt;a href=&quot;https://github.com/kenidi8215&quot; 
      
    
    </summary>
    
      <category term="Language" scheme="http://www.clk11.com/categories/Language/"/>
    
    
      <category term="python" scheme="http://www.clk11.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>关于Python编程从入门到实践中,动手试一试5-10</title>
    <link href="http://www.clk11.com/Python-programming-from-entry-to-practic-5-10.html"/>
    <id>http://www.clk11.com/Python-programming-from-entry-to-practic-5-10.html</id>
    <published>2019-03-05T06:32:49.000Z</published>
    <updated>2019-06-28T02:29:51.576Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于Python编程从入门到实践中-动手试一试5-10"><a href="#关于Python编程从入门到实践中-动手试一试5-10" class="headerlink" title="关于Python编程从入门到实践中,动手试一试5-10"></a>关于Python编程从入门到实践中,动手试一试5-10</h2><p>blog:<a href="https://clk11.com" target="_blank" rel="noopener">github+hexo的blog链接</a><br>github:<a href="https://github.com/kenidi8215" target="_blank" rel="noopener">我的github传送</a><br>CSDN:<a href="https://blog.csdn.net/kenidi8215" target="_blank" rel="noopener">我的CSDN博客</a></p><p><em>5-10 检查用户名：按下面的说明编写一个程序，模拟网站确保每位用户的用户名<br>独一无二的方式。<br>创建一个至少包含 5 个用户名的列表，并将其命名为 current_users。<br>再创建一个包含 5 个用户名的列表，将其命名为 new_users，并确保其中有一两<br>个用户名也包含在列表 current_users 中。<br> 遍历列表 new_users，对于其中的每个用户名，都检查它是否已被使用。如果是<br>这样，就打印一条消息，指出需要输入别的用户名；否则，打印一条消息，指<br>出这个用户名未被使用。<br>确保比较时不区分大消息；换句话说，如果用户名’John’已被使用，应拒绝用户<br>名’JOHN’。</em></p><p><strong>如题，百度了很多代码，对于最后一句话，很多答案并没有实现，自己更改了一下，学习使用，以作记录。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">current_users=[&apos;John&apos;,&apos;B&apos;,&apos;c&apos;,&apos;d&apos;,&apos;e&apos;,&apos;h&apos;]</span><br><span class="line">print(current_users)</span><br><span class="line">current_user=[]#定义一个变量</span><br><span class="line">for x in current_users:</span><br><span class="line">    current_user.append(x.lower())#将列表转化为小写</span><br><span class="line">print(current_user)#测试是否转化了小写</span><br><span class="line">print(current_users)#测试原列表是否没被更改</span><br><span class="line">new_users=[&apos;JOHN&apos;,&apos;b&apos;,&apos;f&apos;,&apos;g&apos;,&apos;p&apos;]</span><br><span class="line">for new_user in new_users :</span><br><span class="line">    if new_user.lower() in current_user:#与转化了小写的current_user比较，少个s</span><br><span class="line">        print(new_user + &quot;,&quot; + &quot;You should print other name.&quot;)</span><br><span class="line">    else :</span><br><span class="line">        print(new_user + &quot;,&quot; + &quot;This name can use.&quot;)</span><br></pre></td></tr></table></figure><p>版本：python3.7</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;关于Python编程从入门到实践中-动手试一试5-10&quot;&gt;&lt;a href=&quot;#关于Python编程从入门到实践中-动手试一试5-10&quot; class=&quot;headerlink&quot; title=&quot;关于Python编程从入门到实践中,动手试一试5-10&quot;&gt;&lt;/a&gt;关于Pyt
      
    
    </summary>
    
      <category term="Language" scheme="http://www.clk11.com/categories/Language/"/>
    
    
      <category term="python" scheme="http://www.clk11.com/tags/python/"/>
    
  </entry>
  
</feed>
