{"title":"Python编程：从入门到实践 19.3.2 missing 1 required positional argument_ 'on_delete'问题","date":"2019-07-01T06:58:49.000Z","url":"/Python-programming-from-entry-to-practic-19-3-2.html","tags":["python"],"categories":["Language"],"content":"CSDN:我的CSDN博客github:我的github传送在19.3.2 将数据关联到用户这个小节中，需要修改models.py文件，用于将数据关联到用户。但在执行python manage.py makemigrations learning_logs时，会出现错误见下图：需要将：owner = models.ForeignKey(User)修改为：owner = models.ForeignKey(User,on_delete=models.CASCADE)然后再执行，成功：原因：在django2.0后，定义外键和一对一关系的时候需要加on_delete选项，此参数为了避免两个表里的数据不一致问题，不然会报错：TypeError: init() missing 1 required positional argument: ‘on_delete’举例说明：user=models.OneToOneField(User)owner=models.ForeignKey(UserProfile)需要改成：user=models.OneToOneField(User,on_delete=models.CASCADE) –在老版本这个参数（models.CASCADE）是默认值owner=models.ForeignKey(UserProfile,on_delete=models.CASCADE) –在老版本这个参数（models.CASCADE）是默认值参数说明：on_delete有CASCADE、PROTECT、SET_NULL、SET_DEFAULT、SET()五个可选择的值CASCADE：此值设置，是级联删除。PROTECT：此值设置，是会报完整性错误。SET_NULL：此值设置，会把外键设置为null，前提是允许为null。SET_DEFAULT：此值设置，会把设置为外键的默认值。SET()：此值设置，会调用外面的值，可以是一个函数。一般情况下使用CASCADE就可以了。参考："},{"title":"（转）詹皇换号1石2鸟！笼络浓眉还赚一笔 名记：他锁定球衣销量第1","date":"2019-06-28T12:50:49.000Z","url":"/NBA-news2019062801.html","tags":["Lakers"],"categories":["NBA"],"content":"北京时间6月28日，根据雅虎名记Haynas报道，詹姆斯将把自己的23号球衣让给新队友安东尼戴维斯。根据消息人士透露，戴维斯对于詹姆斯的这一举动深表感谢。目前虽然没有明确消息表示詹姆斯下赛季穿的号码，但詹姆斯的举动，显然已经非常大度。不过，著名篮球媒体人黎双富也透露了一个事实：詹姆斯下赛季会提前锁定球衣畅销榜第一！按道理说，目前詹姆斯和戴维斯谁是湖人的第一球星，根本没有任何争议！詹姆斯作为联盟第一人，又是老大哥，在戴维斯到来之后，不给浓眉让球衣是情理之中的事情。但最终，詹姆斯主动放低姿态，给戴维斯让出了自己的23号战袍，这不得不赞叹老詹的手腕了。一场还没打，就用这种身外之物笼络浓眉，试想浓眉新赛季还不拼命吗？一旦湖人最终总冠军，FMVP还不是又到老詹手里？所以，詹姆斯的这一举动可谓大度又有手腕！不过，报道NBA多年的媒体人黎双富还透露了詹皇的另外一层想法，那就是换新号可以让詹皇提前锁定下赛季最畅销球衣！仔细一想还真的非常有道理！有球迷已经表示，要攒钱买新球衣了！因为NBA成名的巨星，经过多年的巅峰之后，培养的粉丝群体很可能已经有他的球衣了，即便赛季新款球衣出炉，也不会再花钱去买。但如果这位球员换号码，那就不一样了，追星就得追时尚，如果老詹穿湖人6号，你手中没有一件湖人6号球衣，还算老詹真球迷吗？而这一论断也是有数据佐证的。在去年夏天詹姆斯加盟湖人之后，詹皇的球衣就卖疯了！在18-19赛季的球衣销量榜上，詹皇反超库里排名第一，要知道库里此前已经连续多年排在第一了。此次詹姆斯更换号码，他的球衣显然又要热卖一次，别忘了这是洛杉矶，能来斯台普斯看球的，都不缺钱！"},{"title":"用天然纯露代替爽肤水才能真正的补水","date":"2019-06-28T07:05:49.000Z","url":"/tutu-chunlutidaishuangfushui.html","tags":["图图的芳疗"],"categories":["Friends"],"content":"用天然纯露代替爽肤水，才能真正的补水爽肤水中一般会添加各种保湿剂、增稠剂、肤感调节剂、酒精、香精、防腐剂等。我们暂且不说其它的，只看酒精这一个成分，酒精又称为乙醇，只适用于特定皮肤，一般肌肤长期使用，易干燥、粗糙，并有提前角化的风险。对于闻起来有明显酒精气味的护肤品，酒精添加量肯定不少。但闻起来不明显的，并不代表酒精含量低，因为可以添加其它香精去掩盖。图图的芳疗群"},{"title":"祛痘精油","date":"2019-06-28T04:32:49.000Z","url":"/tutu-qudoujingyou.html","tags":["图图的芳疗"],"categories":["Friends"],"content":"祛痘精油含有茶树、迷迭香、薰衣草、洋甘菊等多种植物精油，对任何痘痘都有效，每次只需要一点点涂抹在痘痘上即可。满满的植物精油的气味，真正的无添加哦。"},{"title":"测试test","date":"2019-06-27T06:32:49.000Z","url":"/test.html","tags":["test"],"categories":["Test"],"content":"这是一个test文件，用来忽悠各位看官。"},{"title":"Hello World","date":"2019-06-26T15:23:23.000Z","url":"/hello-world.html","tags":["test"],"categories":["Test"],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new postMore info: WritingRun serverMore info: ServerGenerate static filesMore info: GeneratingDeploy to remote sitesMore info: Deployment"},{"title":"Python问题解决：ImportError_ No module named 'pygal.i18n'","date":"2019-04-01T14:22:49.000Z","url":"/Python-programming-from-entry-to-practic-pygal.i18n.html","tags":["python"],"categories":["Language"],"content":"blog:github+hexo的blog链接github:我的github传送CSDN:我的CSDN博客在《Python编程：从入门到实践》书中的一个项目用到pygal.i18n获取国别码，然而，现在pygal已经没有i18n模块，要改用pygal_maps_world.i18n，解决方法如下："},{"title":"关于pi，百万位圆周率，pi_million_digits.txt，分享给大家","date":"2019-03-14T06:32:49.000Z","url":"/Python-programming-from-entry-to-practic-pi_million_digits.html","tags":["python"],"categories":["Language"],"content":"blog:github+hexo的blog链接github:我的github传送CSDN:我的CSDN博客学习python中需要一个百万圆周率的txt文件，但是按书上的链接又打不开，百度找了很久才找到，分享一下。以下是前500位。百万位下载地址如下：csdn下载：pi_million_digits.txt外链下载免费下载"},{"title":"关于Python编程从入门到实践中,动手试一试5-10","date":"2019-03-05T06:32:49.000Z","url":"/Python-programming-from-entry-to-practic-5-10.html","tags":["python"],"categories":["Language"],"content":"关于Python编程从入门到实践中,动手试一试5-10blog:github+hexo的blog链接github:我的github传送CSDN:我的CSDN博客5-10 检查用户名：按下面的说明编写一个程序，模拟网站确保每位用户的用户名独一无二的方式。创建一个至少包含 5 个用户名的列表，并将其命名为 current_users。再创建一个包含 5 个用户名的列表，将其命名为 new_users，并确保其中有一两个用户名也包含在列表 current_users 中。 遍历列表 new_users，对于其中的每个用户名，都检查它是否已被使用。如果是这样，就打印一条消息，指出需要输入别的用户名；否则，打印一条消息，指出这个用户名未被使用。确保比较时不区分大消息；换句话说，如果用户名’John’已被使用，应拒绝用户名’JOHN’。如题，百度了很多代码，对于最后一句话，很多答案并没有实现，自己更改了一下，学习使用，以作记录。版本：python3.7"}]